(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[54,7],{

/***/ 107:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ nanoid; });

// UNUSED EXPORTS: customAlphabet, customRandom, urlAlphabet, random

// CONCATENATED MODULE: ./node_modules/nanoid/url-alphabet/index.js
// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped
// optimize the gzip compression for this alphabet.
let urlAlphabet =
  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'



// CONCATENATED MODULE: ./node_modules/nanoid/index.browser.js
// This file replaces `index.js` in bundlers like webpack or Rollup,
// according to `browser` config in `package.json`.



if (false) {}

let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))

let customRandom = (alphabet, size, getRandom) => {
  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes
  // values closer to the alphabet size. The bitmask calculates the closest
  // `2^31 - 1` number, which exceeds the alphabet size.
  // For example, the bitmask for the alphabet size 30 is 31 (00011111).
  // `Math.clz32` is not used, because it is not available in browsers.
  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1
  // Though, the bitmask solution is not perfect since the bytes exceeding
  // the alphabet size are refused. Therefore, to reliably generate the ID,
  // the random bytes redundancy has to be satisfied.

  // Note: every hardware random generator call is performance expensive,
  // because the system call for entropy collection takes a lot of time.
  // So, to avoid additional system calls, extra bytes are requested in advance.

  // Next, a step determines how many random bytes to generate.
  // The number of random bytes gets decided upon the ID size, mask,
  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance
  // according to benchmarks).

  // `-~f => Math.ceil(f)` if f is a float
  // `-~i => i + 1` if i is an integer
  let step = -~((1.6 * mask * size) / alphabet.length)

  return () => {
    let id = ''
    while (true) {
      let bytes = getRandom(step)
      // A compact alternative for `for (var i = 0; i < step; i++)`.
      let j = step
      while (j--) {
        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.
        id += alphabet[bytes[j] & mask] || ''
        if (id.length === size) return id
      }
    }
  }
}

let customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)

let nanoid = (size = 21) => {
  let id = ''
  let bytes = crypto.getRandomValues(new Uint8Array(size))

  // A compact alternative for `for (var i = 0; i < step; i++)`.
  while (size--) {
    // It is incorrect to use bytes exceeding the alphabet size.
    // The following mask reduces the random byte in the 0-255 value
    // range to the 0-63 value range. Therefore, adding hacks, such
    // as empty string fallback or magic numbers, is unneccessary because
    // the bitmask trims bytes down to the alphabet size.
    let byte = bytes[size] & 63
    if (byte < 36) {
      // `0-9a-z`
      id += byte.toString(36)
    } else if (byte < 62) {
      // `A-Z`
      id += (byte - 26).toString(36).toUpperCase()
    } else if (byte < 63) {
      id += '_'
    } else {
      id += '-'
    }
  }
  return id
}




/***/ }),

/***/ 759:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DoenetRenderer; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(10);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(0);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(107);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);









function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }




var DoenetRenderer = /*#__PURE__*/function (_Component) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(DoenetRenderer, _Component);

  var _super = _createSuper(DoenetRenderer);

  function DoenetRenderer(props) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, DoenetRenderer);

    _this = _super.call(this, props);
    _this.addChildren = _this.addChildren.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this));
    _this.removeChildren = _this.removeChildren.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this));
    _this.swapChildren = _this.swapChildren.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this));
    _this.update = _this.update.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this));
    _this.childrenToCreate = props.componentInstructions.children;
    _this.componentName = props.componentInstructions.componentName;
    _this.actions = props.componentInstructions.actions; // This keeps the proxy in place so that state variables
    // aren't calculated unless asked for
    // Also means it will always have the new values when they are changed
    // so we don't have to pass them in on update

    _this.doenetSvData = props.componentInstructions.stateValues;
    props.rendererUpdateMethods[_this.componentName] = {
      update: _this.update,
      addChildren: _this.addChildren,
      removeChildren: _this.removeChildren,
      swapChildren: _this.swapChildren
    };

    if (_this.constructor.initializeChildrenOnConstruction) {
      _this.initializeChildren();
    }

    return _this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(DoenetRenderer, [{
    key: "update",
    value: function update() {
      this.forceUpdate();
    }
  }, {
    key: "addChildren",
    value: function addChildren(instruction) {
      var childInstructions = this.childrenToCreate[instruction.indexForParent];
      var child = this.createChildFromInstructions(childInstructions);
      this.children.splice(instruction.indexForParent, 0, child);
      this.children = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.children); // needed for React to recognize it's different

      this.forceUpdate();
    }
  }, {
    key: "removeChildren",
    value: function removeChildren(instruction) {
      this.children.splice(instruction.firstIndexInParent, instruction.numberChildrenDeleted);
      this.children = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.children); // needed for React to recognize it's different

      var _iterator = _createForOfIteratorHelper(instruction.deletedComponentNames),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var componentName = _step.value;
          delete this.props.rendererUpdateMethods[componentName];
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      this.forceUpdate();
    }
  }, {
    key: "swapChildren",
    value: function swapChildren(instruction) {
      var _ref = [this.children[instruction.index2], this.children[instruction.index1]];
      this.children[instruction.index1] = _ref[0];
      this.children[instruction.index2] = _ref[1];
      this.children = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.children); // needed for React to recognize it's different

      this.forceUpdate();
    }
  }, {
    key: "initializeChildren",
    value: function initializeChildren() {
      this.children = [];

      var _iterator2 = _createForOfIteratorHelper(this.childrenToCreate),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var childInstructions = _step2.value;
          var child = this.createChildFromInstructions(childInstructions);
          this.children.push(child);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      return this.children;
    }
  }, {
    key: "createChildFromInstructions",
    value: function createChildFromInstructions(childInstructions) {
      // add nanoid to key so that will have unique key if recreate
      // renderer for a component with the same name as an old one
      // TODO: is this the best way to do it?
      var propsForChild = {
        key: childInstructions.componentName + Object(nanoid__WEBPACK_IMPORTED_MODULE_8__[/* nanoid */ "a"])(10),
        componentInstructions: childInstructions,
        rendererClasses: this.props.rendererClasses,
        rendererUpdateMethods: this.props.rendererUpdateMethods,
        flags: this.props.flags
      };

      if (this.doenetPropsForChildren) {
        Object.assign(propsForChild, this.doenetPropsForChildren);
      }

      var child = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement(this.props.rendererClasses[childInstructions.rendererType], propsForChild);
      return child;
    }
  }]);

  return DoenetRenderer;
}(react__WEBPACK_IMPORTED_MODULE_9__["Component"]);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(DoenetRenderer, "initializeChildrenOnConstruction", true);



/***/ }),

/***/ 806:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Vector; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(12);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(4);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(10);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(0);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(1);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _DoenetRenderer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(759);









function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }




var Vector = /*#__PURE__*/function (_DoenetRenderer) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(Vector, _DoenetRenderer);

  var _super = _createSuper(Vector);

  function Vector(props) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Vector);

    _this = _super.call(this, props);
    _this.onDragHandler = _this.onDragHandler.bind(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this));

    if (props.board) {
      _this.createGraphicalObject();

      _this.doenetPropsForChildren = {
        board: _this.props.board
      };

      _this.initializeChildren();
    }

    _this.vectorBeingDragged = false;
    _this.headBeingDragged = false;
    _this.tailBeingDragged = false;
    return _this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Vector, [{
    key: "createGraphicalObject",
    value: function createGraphicalObject() {
      var _this2 = this;

      if (this.doenetSvData.numericalEndpoints.length !== 2 || this.doenetSvData.numericalEndpoints.some(function (x) {
        return x.length !== 2;
      })) {
        return;
      }

      var layer = 10 * this.doenetSvData.layer + 7; //things to be passed to JSXGraph as attributes

      var jsxVectorAttributes = {
        name: this.doenetSvData.label,
        visible: !this.doenetSvData.hidden,
        withLabel: this.doenetSvData.showLabel && this.doenetSvData.label !== "",
        fixed: this.doenetSvData.draggable !== true,
        layer: layer,
        strokeColor: this.doenetSvData.selectedStyle.markerColor,
        highlightStrokeColor: this.doenetSvData.selectedStyle.markerColor,
        strokeWidth: this.doenetSvData.selectedStyle.lineWidth,
        dash: styleToDash(this.doenetSvData.selectedStyle.lineStyle)
      };

      if (!this.doenetSvData.draggable) {
        jsxVectorAttributes.highlightStrokeWidth = this.doenetSvData.selectedStyle.lineWidth;
      }

      var endpoints = [_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.doenetSvData.numericalEndpoints[0]), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.doenetSvData.numericalEndpoints[1])];
      var jsxPointAttributes = Object.assign({}, jsxVectorAttributes);
      Object.assign(jsxPointAttributes, {
        withLabel: false,
        fillColor: 'none',
        strokeColor: 'none',
        highlightStrokeColor: 'none',
        highlightFillColor: 'lightgray',
        layer: layer + 1
      });

      if (!this.doenetSvData.draggable) {
        jsxPointAttributes.visible = false;
      } // create invisible points at endpoints


      var tailPointAttributes = Object.assign({}, jsxPointAttributes);

      if (!this.doenetSvData.tailDraggable) {
        tailPointAttributes.visible = false;
      }

      this.point1JXG = this.props.board.create('point', endpoints[0], tailPointAttributes);
      var headPointAttributes = Object.assign({}, jsxPointAttributes);

      if (!this.doenetSvData.headDraggable) {
        headPointAttributes.visible = false;
      }

      this.point2JXG = this.props.board.create('point', endpoints[1], headPointAttributes);
      this.vectorJXG = this.props.board.create('arrow', [this.point1JXG, this.point2JXG], jsxVectorAttributes);
      this.point1JXG.on('drag', function (e) {
        return _this2.onDragHandler(e, 0, true);
      });
      this.point2JXG.on('drag', function (e) {
        return _this2.onDragHandler(e, 1, true);
      });
      this.vectorJXG.on('drag', function (e) {
        return _this2.onDragHandler(e, -1, true);
      });
      this.point1JXG.on('up', function (e) {
        return _this2.onDragHandler(e, 0, false);
      });
      this.point2JXG.on('up', function (e) {
        return _this2.onDragHandler(e, 1, false);
      });
      this.vectorJXG.on('up', function (e) {
        return _this2.onDragHandler(e, -1, false);
      });
      this.point1JXG.on('down', function (e) {
        this.headBeingDragged = false;
        this.tailBeingDragged = false;
      });
      this.point2JXG.on('down', function (e) {
        this.headBeingDragged = false;
        this.tailBeingDragged = false;
      }); // if drag vector, need to keep track of original point positions
      // so that they won't get stuck in an attractor

      this.vectorJXG.on('down', function (e) {
        this.headBeingDragged = false;
        this.tailBeingDragged = false;
        this.pointerAtDown = [e.x, e.y];
        this.pointsAtDown = [_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.vectorJXG.point1.coords.scrCoords), _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(this.vectorJXG.point2.coords.scrCoords)];
      }.bind(this));
      return this.vectorJXG;
    }
  }, {
    key: "deleteGraphicalObject",
    value: function deleteGraphicalObject() {
      this.props.board.removeObject(this.vectorJXG);
      delete this.vectorJXG;
      this.props.board.removeObject(this.point1JXG);
      delete this.point1JXG;
      this.props.board.removeObject(this.point2JXG);
      delete this.point2JXG;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.vectorJXG) {
        this.deleteGraphicalObject();
      }
    }
  }, {
    key: "update",
    value: function update(_ref) {
      var sourceOfUpdate = _ref.sourceOfUpdate;

      if (!this.props.board) {
        this.forceUpdate();
        return;
      }

      if (this.vectorJXG === undefined) {
        return this.createGraphicalObject();
      }

      if (this.doenetSvData.numericalEndpoints.length !== 2 || this.doenetSvData.numericalEndpoints.some(function (x) {
        return x.length !== 2;
      })) {
        return this.deleteGraphicalObject();
      }

      var validPoints = true;

      for (var _i = 0, _arr = [this.doenetSvData.numericalEndpoints[0], this.doenetSvData.numericalEndpoints[1]]; _i < _arr.length; _i++) {
        var coords = _arr[_i];

        if (!Number.isFinite(coords[0])) {
          validPoints = false;
        }

        if (!Number.isFinite(coords[1])) {
          validPoints = false;
        }
      }

      this.vectorJXG.point1.coords.setCoordinates(JXG.COORDS_BY_USER, this.doenetSvData.numericalEndpoints[0]);
      this.vectorJXG.point2.coords.setCoordinates(JXG.COORDS_BY_USER, this.doenetSvData.numericalEndpoints[1]);
      var visible = !this.doenetSvData.hidden;

      if (validPoints) {
        this.vectorJXG.visProp["visible"] = visible;
        this.vectorJXG.visPropCalc["visible"] = visible; // this.vectorJXG.setAttribute({visible: visible})

        if (this.doenetSvData.draggable) {
          this.vectorJXG.visProp["fixed"] = false;

          if (this.doenetSvData.tailDraggable) {
            this.point1JXG.visProp["visible"] = visible;
            this.point1JXG.visPropCalc["visible"] = visible;
            this.point1JXG.visProp["fixed"] = false;
          } else {
            this.point1JXG.visProp["visible"] = false;
            this.point1JXG.visPropCalc["visible"] = false;
            this.point1JXG.visProp["fixed"] = true;
          }

          if (this.doenetSvData.headDraggable) {
            this.point2JXG.visProp["visible"] = visible;
            this.point2JXG.visPropCalc["visible"] = visible;
            this.point2JXG.visProp["fixed"] = false;
          } else {
            this.point2JXG.visProp["visible"] = false;
            this.point2JXG.visPropCalc["visible"] = false;
            this.point2JXG.visProp["fixed"] = true;
          }
        } else {
          this.vectorJXG.visProp["fixed"] = true;
          this.point1JXG.visProp["visible"] = false;
          this.point1JXG.visPropCalc["visible"] = false;
          this.point1JXG.visProp["fixed"] = true;
          this.point2JXG.visProp["visible"] = false;
          this.point2JXG.visPropCalc["visible"] = false;
          this.point2JXG.visProp["fixed"] = true;
        }
      } else {
        this.vectorJXG.visProp["visible"] = false;
        this.vectorJXG.visPropCalc["visible"] = false; // this.vectorJXG.setAttribute({visible: false})

        this.point1JXG.visProp["visible"] = false;
        this.point1JXG.visPropCalc["visible"] = false;
        this.point2JXG.visProp["visible"] = false;
        this.point2JXG.visPropCalc["visible"] = false;
      }

      if (this.componentName in sourceOfUpdate.sourceInformation) {
        var sourceInfo = sourceOfUpdate.sourceInformation[this.componentName];

        if (sourceInfo.vertex === 0) {
          this.props.board.updateInfobox(this.point1JXG);
        } else if (sourceInfo.vertex === 1) {
          this.props.board.updateInfobox(this.point2JXG);
        }
      }

      this.vectorJXG.name = this.doenetSvData.label; // this.vectorJXG.visProp.withlabel = this.showlabel && this.label !== "";

      var withlabel = this.doenetSvData.showLabel && this.doenetSvData.label !== "";

      if (withlabel != this.previousWithLabel) {
        this.vectorJXG.setAttribute({
          withlabel: withlabel
        });
        this.previousWithLabel = withlabel;
      }

      this.vectorJXG.needsUpdate = true;
      this.vectorJXG.update();

      if (this.vectorJXG.hasLabel) {
        this.vectorJXG.label.needsUpdate = true;
        this.vectorJXG.label.update();
      }

      this.point1JXG.needsUpdate = true;
      this.point1JXG.update();
      this.point2JXG.needsUpdate = true;
      this.point2JXG.update();
      this.props.board.updateRenderer();
    }
  }, {
    key: "onDragHandler",
    value: function onDragHandler(e, i, _transient) {
      if (_transient) {
        if (i === 0) {
          this.tailBeingDragged = true;
        } else if (i === 1) {
          this.headBeingDragged = true;
        } else {
          this.headBeingDragged = true;
          this.tailBeingDragged = true;
        }
      }

      var instructions = {
        "transient": _transient
      };
      var performMove = false;

      if (this.headBeingDragged) {
        performMove = true;

        if (i === -1) {
          instructions.headcoords = this.calculatePointPosition(e, 1);
        } else {
          instructions.headcoords = [this.vectorJXG.point2.X(), this.vectorJXG.point2.Y()];
        }
      }

      if (this.tailBeingDragged) {
        performMove = true;

        if (i === -1) {
          instructions.tailcoords = this.calculatePointPosition(e, 0);
        } else {
          instructions.tailcoords = [this.vectorJXG.point1.X(), this.vectorJXG.point1.Y()];
        }
      }

      if (i === 0 || i === 1) {
        instructions.sourceInformation = {
          vertex: i
        };
      }

      if (performMove) {
        this.actions.moveVector(instructions);
      }
    }
  }, {
    key: "calculatePointPosition",
    value: function calculatePointPosition(e, i) {
      var o = this.props.board.origin.scrCoords;
      var calculatedX = (this.pointsAtDown[i][1] + e.x - this.pointerAtDown[0] - o[1]) / this.props.board.unitX;
      var calculatedY = (o[2] - (this.pointsAtDown[i][2] + e.y - this.pointerAtDown[1])) / this.props.board.unitY;
      var pointCoords = [calculatedX, calculatedY];
      return pointCoords;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.props.board) {
        window.MathJax.Hub.Config({
          showProcessingMessages: false,
          "fast-preview": {
            disabled: true
          }
        });
        window.MathJax.Hub.processSectionDelay = 0;
        window.MathJax.Hub.Queue(["Typeset", window.MathJax.Hub, "#" + this.componentName]);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (!this.props.board) {
        window.MathJax.Hub.Queue(["Typeset", window.MathJax.Hub, "#" + this.componentName]);
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (this.props.board) {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_8___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement("a", {
          name: this.componentName
        }), this.children);
      }

      if (this.doenetSvData.hidden) {
        return null;
      }

      var mathJaxify = "\\(" + this.doenetSvData.displacementCoords + "\\)";
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_8___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement("a", {
        name: this.componentName
      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement("span", {
        id: this.componentName
      }, mathJaxify));
    }
  }]);

  return Vector;
}(_DoenetRenderer__WEBPACK_IMPORTED_MODULE_9__["default"]);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_7___default()(Vector, "initializeChildrenOnConstruction", false);



function styleToDash(style) {
  if (style === "solid") {
    return 0;
  } else if (style === "dashed") {
    return 2;
  } else if (style === "dotted") {
    return 1;
  } else {
    return 0;
  }
}

/***/ })

}]);